Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    HASH


State 343 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INTEGER_CONSTANT
    3                   | FLOATING_CONSTANT
    4                   | CHAR_CONSTANT
    5                   | STRING_LITERAL
    6                   | PARENTHESIS_OPEN expression PARENTHESIS_CLOSE

    7 postfix_expression: primary_expression
    8                   | postfix_expression SQUARE_BRACE_OPEN expression SQUARE_BRACE_CLOSE
    9                   | postfix_expression PARENTHESIS_OPEN PARENTHESIS_CLOSE
   10                   | postfix_expression PARENTHESIS_OPEN argument_expression_list PARENTHESIS_CLOSE
   11                   | postfix_expression DOT IDENTIFIER
   12                   | postfix_expression ARROW IDENTIFIER
   13                   | postfix_expression INCREMENT
   14                   | postfix_expression DECREMENT
   15                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

   17 argument_expression_list: assignment_expression
   18                         | argument_expression_list COMMA assignment_expression

   19 unary_expression: postfix_expression
   20                 | INCREMENT unary_expression
   21                 | DECREMENT unary_expression
   22                 | unary_operator cast_expression
   23                 | SIZEOF unary_expression
   24                 | SIZEOF PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE

   25 unary_operator: BITWISE_AND
   26               | MULTIPLY
   27               | ADD_
   28               | SUBTRACT
   29               | BITWISE_NOR
   30               | NOT

   31 cast_expression: unary_expression
   32                | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE cast_expression

   33 multiplicative_expression: cast_expression
   34                          | multiplicative_expression MULTIPLY cast_expression
   35                          | multiplicative_expression DIVIDE cast_expression
   36                          | multiplicative_expression MODULO cast_expression

   37 additive_expression: multiplicative_expression
   38                    | additive_expression ADD_ multiplicative_expression
   39                    | additive_expression SUBTRACT multiplicative_expression

   40 shift_expression: additive_expression
   41                 | shift_expression LSHIFT additive_expression
   42                 | shift_expression RSHIFT additive_expression

   43 relational_expression: shift_expression
   44                      | relational_expression LESS_THAN shift_expression
   45                      | relational_expression GREATER_THAN shift_expression
   46                      | relational_expression LESS_THAN_EQUAL shift_expression
   47                      | relational_expression GREATER_THAN_EQUAL shift_expression

   48 equality_expression: relational_expression
   49                    | equality_expression EQUAL relational_expression
   50                    | equality_expression NOT_EQUAL relational_expression

   51 and_expression: equality_expression
   52               | and_expression BITWISE_AND equality_expression

   53 exclusive_or_expression: and_expression
   54                        | exclusive_or_expression BITWISE_XOR and_expression

   55 inclusive_or_expression: exclusive_or_expression
   56                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   57 logical_and_expression: inclusive_or_expression
   58                       | logical_and_expression LOGICAL_AND M inclusive_or_expression

   59 logical_or_expression: logical_and_expression
   60                      | logical_or_expression LOGICAL_OR M logical_and_expression

   61 conditional_expression: logical_or_expression
   62                       | logical_or_expression N QUESTION_MARK M expression N COLON M conditional_expression

   63 M: %empty

   64 N: %empty

   65 assignment_expression: conditional_expression
   66                      | unary_expression assignment_operator assignment_expression

   67 assignment_operator: ASSIGN_
   68                    | MULTIPLY_ASSIGN
   69                    | DIVIDE_ASSIGN
   70                    | MODULO_ASSIGN
   71                    | ADD_ASSIGN
   72                    | SUBTRACT_ASSIGN
   73                    | LSHIFT_ASSIGN
   74                    | RSHIFT_ASSIGN
   75                    | AND_ASSIGN
   76                    | XOR_ASSIGN
   77                    | OR_ASSIGN

   78 expression: assignment_expression
   79           | expression COMMA assignment_expression

   80 constant_expression: conditional_expression

   81 declaration: declaration_specifiers init_declarator_list SEMICOLON
   82            | declaration_specifiers SEMICOLON

   83 declaration_specifiers: storage_class_specifier declaration_specifiers
   84                       | storage_class_specifier
   85                       | type_specifier declaration_specifiers
   86                       | type_specifier
   87                       | type_qualifier declaration_specifiers
   88                       | type_qualifier
   89                       | function_specifier declaration_specifiers
   90                       | function_specifier

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list COMMA init_declarator

   93 init_declarator: declarator
   94                | declarator ASSIGN_ initializer

   95 storage_class_specifier: EXTERN
   96                        | STATIC
   97                        | AUTO
   98                        | REGISTER

   99 type_specifier: VOID_
  100               | CHAR_
  101               | SHORT
  102               | INT_
  103               | LONG
  104               | FLOAT_
  105               | DOUBLE
  106               | SIGNED
  107               | UNSIGNED
  108               | BOOL_
  109               | COMPLEX
  110               | IMAGINARY
  111               | enum_specifier

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  113                         | type_qualifier specifier_qualifier_list_opt

  114 specifier_qualifier_list_opt: specifier_qualifier_list
  115                             | %empty

  116 enum_specifier: ENUM CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  117               | ENUM IDENTIFIER CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  118               | ENUM IDENTIFIER CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE
  119               | ENUM IDENTIFIER

  120 enumerator_list: enumerator
  121                | enumerator_list COMMA enumerator

  122 enumerator: IDENTIFIER
  123           | IDENTIFIER ASSIGN_ constant_expression

  124 type_qualifier: CONST
  125               | RESTRICT
  126               | VOLATILE

  127 function_specifier: INLINE

  128 declarator: pointer direct_declarator
  129           | direct_declarator

  130 direct_declarator: IDENTIFIER
  131                  | PARENTHESIS_OPEN declarator PARENTHESIS_CLOSE
  132                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt SQUARE_BRACE_CLOSE
  133                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt assignment_expression SQUARE_BRACE_CLOSE
  134                  | direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  135                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  136                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt MULTIPLY SQUARE_BRACE_CLOSE
  137                  | direct_declarator PARENTHESIS_OPEN parameter_type_list_opt PARENTHESIS_CLOSE
  138                  | direct_declarator PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE

  139 parameter_type_list_opt: parameter_type_list
  140                        | %empty

  141 type_qualifier_list_opt: type_qualifier_list
  142                        | %empty

  143 pointer: MULTIPLY type_qualifier_list
  144        | MULTIPLY
  145        | MULTIPLY type_qualifier_list pointer
  146        | MULTIPLY pointer

  147 type_qualifier_list: type_qualifier
  148                    | type_qualifier_list type_qualifier

  149 parameter_type_list: parameter_list
  150                    | parameter_list COMMA ELLIPSIS

  151 parameter_list: parameter_declaration
  152               | parameter_list COMMA parameter_declaration

  153 parameter_declaration: declaration_specifiers declarator
  154                      | declaration_specifiers

  155 identifier_list: IDENTIFIER
  156                | identifier_list COMMA IDENTIFIER

  157 type_name: specifier_qualifier_list

  158 initializer: assignment_expression
  159            | CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
  160            | CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

  161 initializer_list: designation_opt initializer
  162                 | initializer_list COMMA designation_opt initializer

  163 designation_opt: designation
  164                | %empty

  165 designation: designator_list ASSIGN_

  166 designator_list: designator
  167                | designator_list designator

  168 designator: SQUARE_BRACE_OPEN constant_expression SQUARE_BRACE_CLOSE
  169           | DOT IDENTIFIER

  170 statement: labeled_statement
  171          | compound_statement
  172          | expression_statement
  173          | selection_statement
  174          | iteration_statement
  175          | jump_statement

  176 labeled_statement: IDENTIFIER COLON statement
  177                  | CASE constant_expression COLON statement
  178                  | DEFAULT COLON statement

  179 compound_statement: CURLY_BRACE_OPEN CURLY_BRACE_CLOSE
  180                   | CURLY_BRACE_OPEN block_item_list CURLY_BRACE_CLOSE

  181 block_item_list: block_item
  182                | block_item_list M block_item

  183 block_item: declaration
  184           | statement

  185 expression_statement: expression SEMICOLON
  186                     | SEMICOLON

  187 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N
  188                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M statement N
  189                    | SWITCH PARENTHESIS_OPEN expression PARENTHESIS_CLOSE statement

  190 iteration_statement: WHILE M PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement
  191                    | DO M statement M WHILE PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE SEMICOLON
  192                    | FOR PARENTHESIS_OPEN expression_statement M expression_statement N M expression N PARENTHESIS_CLOSE M statement

  193 jump_statement: GOTO_ IDENTIFIER SEMICOLON
  194               | CONTINUE SEMICOLON
  195               | BREAK SEMICOLON
  196               | RETURN_ SEMICOLON
  197               | RETURN_ expression SEMICOLON

  198 translation_unit: external_declaration
  199                 | translation_unit external_declaration

  200 external_declaration: function_definition
  201                     | declaration

  202 function_definition: declaration_specifiers declarator declaration_list compound_statement
  203                    | function_prototype compound_statement

  204 function_prototype: declaration_specifiers declarator

  205 declaration_list: declaration
  206                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258) 97
    BREAK (259) 195
    CASE (260) 177
    CHAR_ (261) 100
    CONST (262) 124
    CONTINUE (263) 194
    DEFAULT (264) 178
    DO (265) 191
    DOUBLE (266) 105
    ELSE (267) 188
    ENUM (268) 116 117 118 119
    EXTERN (269) 95
    FLOAT_ (270) 104
    FOR (271) 192
    GOTO_ (272) 193
    IF (273) 187 188
    INLINE (274) 127
    INT_ (275) 102
    LONG (276) 103
    REGISTER (277) 98
    RESTRICT (278) 125
    RETURN_ (279) 196 197
    SHORT (280) 101
    SIGNED (281) 106
    SIZEOF (282) 23 24
    STATIC (283) 96 134 135
    STRUCT (284)
    SWITCH (285) 189
    TYPEDEF (286)
    UNION (287)
    UNSIGNED (288) 107
    VOID_ (289) 99
    VOLATILE (290) 126
    WHILE (291) 190 191
    BOOL_ (292) 108
    COMPLEX (293) 109
    IMAGINARY (294) 110
    SQUARE_BRACE_OPEN (295) 8 132 133 134 135 136 168
    SQUARE_BRACE_CLOSE (296) 8 132 133 134 135 136 168
    PARENTHESIS_OPEN (297) 6 9 10 15 16 24 32 131 137 138 187 188 189 190 191 192
    PARENTHESIS_CLOSE (298) 6 9 10 15 16 24 32 131 137 138 187 188 189 190 191 192
    CURLY_BRACE_OPEN (299) 15 16 116 117 118 159 160 179 180
    CURLY_BRACE_CLOSE (300) 15 16 116 117 118 159 160 179 180
    DOT (301) 11 169
    ARROW (302) 12
    INCREMENT (303) 13 20
    DECREMENT (304) 14 21
    BITWISE_AND (305) 25 52
    MULTIPLY (306) 26 34 136 143 144 145 146
    ADD_ (307) 27 38
    SUBTRACT (308) 28 39
    BITWISE_NOR (309) 29
    NOT (310) 30
    DIVIDE (311) 35
    MODULO (312) 36
    LSHIFT (313) 41
    RSHIFT (314) 42
    LESS_THAN (315) 44
    GREATER_THAN (316) 45
    LESS_THAN_EQUAL (317) 46
    GREATER_THAN_EQUAL (318) 47
    EQUAL (319) 49
    NOT_EQUAL (320) 50
    BITWISE_XOR (321) 54
    BITWISE_OR (322) 56
    LOGICAL_AND (323) 58
    LOGICAL_OR (324) 60
    QUESTION_MARK (325) 62
    COLON (326) 62 176 177 178
    SEMICOLON (327) 81 82 185 186 191 193 194 195 196 197
    ELLIPSIS (328) 150
    ASSIGN_ (329) 67 94 123 165
    MULTIPLY_ASSIGN (330) 68
    DIVIDE_ASSIGN (331) 69
    MODULO_ASSIGN (332) 70
    ADD_ASSIGN (333) 71
    SUBTRACT_ASSIGN (334) 72
    LSHIFT_ASSIGN (335) 73
    RSHIFT_ASSIGN (336) 74
    AND_ASSIGN (337) 75
    XOR_ASSIGN (338) 76
    OR_ASSIGN (339) 77
    COMMA (340) 16 18 79 92 118 121 150 152 156 160 162
    HASH (341)
    IDENTIFIER <str> (342) 1 11 12 117 118 119 122 123 130 155 156 169 176 193
    INTEGER_CONSTANT <intval> (343) 2
    FLOATING_CONSTANT <floatval> (344) 3
    CHAR_CONSTANT <charval> (345) 4
    STRING_LITERAL <str> (346) 5


Nonterminals, with rules where they appear

    $accept (92)
        on left: 0
    primary_expression <expr> (93)
        on left: 1 2 3 4 5 6
        on right: 7
    postfix_expression <expr> (94)
        on left: 7 8 9 10 11 12 13 14 15 16
        on right: 8 9 10 11 12 13 14 19
    argument_expression_list <prmList> (95)
        on left: 17 18
        on right: 10 18
    unary_expression <expr> (96)
        on left: 19 20 21 22 23 24
        on right: 20 21 23 31 66
    unary_operator <charval> (97)
        on left: 25 26 27 28 29 30
        on right: 22
    cast_expression <expr> (98)
        on left: 31 32
        on right: 22 32 33 34 35 36
    multiplicative_expression <expr> (99)
        on left: 33 34 35 36
        on right: 34 35 36 37 38 39
    additive_expression <expr> (100)
        on left: 37 38 39
        on right: 38 39 40 41 42
    shift_expression <expr> (101)
        on left: 40 41 42
        on right: 41 42 43 44 45 46 47
    relational_expression <expr> (102)
        on left: 43 44 45 46 47
        on right: 44 45 46 47 48 49 50
    equality_expression <expr> (103)
        on left: 48 49 50
        on right: 49 50 51 52
    and_expression <expr> (104)
        on left: 51 52
        on right: 52 53 54
    exclusive_or_expression <expr> (105)
        on left: 53 54
        on right: 54 55 56
    inclusive_or_expression <expr> (106)
        on left: 55 56
        on right: 56 57 58
    logical_and_expression <expr> (107)
        on left: 57 58
        on right: 58 59 60
    logical_or_expression <expr> (108)
        on left: 59 60
        on right: 60 61 62
    conditional_expression <expr> (109)
        on left: 61 62
        on right: 62 65 80
    M <expr> (110)
        on left: 63
        on right: 58 60 62 182 187 188 190 191 192
    N <expr> (111)
        on left: 64
        on right: 62 187 188 190 191 192
    assignment_expression <expr> (112)
        on left: 65 66
        on right: 17 18 66 78 79 133 134 135 158
    assignment_operator (113)
        on left: 67 68 69 70 71 72 73 74 75 76 77
        on right: 66
    expression <expr> (114)
        on left: 78 79
        on right: 6 8 62 79 185 187 188 189 190 191 192 197
    constant_expression (115)
        on left: 80
        on right: 123 168 177
    declaration (116)
        on left: 81 82
        on right: 183 201 205 206
    declaration_specifiers <types> (117)
        on left: 83 84 85 86 87 88 89 90
        on right: 81 82 83 85 87 89 153 154 202 204
    init_declarator_list <decList> (118)
        on left: 91 92
        on right: 81 92
    init_declarator <dec> (119)
        on left: 93 94
        on right: 91 92
    storage_class_specifier (120)
        on left: 95 96 97 98
        on right: 83 84
    type_specifier <types> (121)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110 111
        on right: 85 86 112
    specifier_qualifier_list (122)
        on left: 112 113
        on right: 114 157
    specifier_qualifier_list_opt (123)
        on left: 114 115
        on right: 112 113
    enum_specifier (124)
        on left: 116 117 118 119
        on right: 111
    enumerator_list (125)
        on left: 120 121
        on right: 116 117 118 121
    enumerator (126)
        on left: 122 123
        on right: 120 121
    type_qualifier (127)
        on left: 124 125 126
        on right: 87 88 113 147 148
    function_specifier (128)
        on left: 127
        on right: 89 90
    declarator <dec> (129)
        on left: 128 129
        on right: 93 94 131 153 202 204
    direct_declarator <dec> (130)
        on left: 130 131 132 133 134 135 136 137 138
        on right: 128 129 132 133 134 135 136 137 138
    parameter_type_list_opt <prmList> (131)
        on left: 139 140
        on right: 137
    type_qualifier_list_opt (132)
        on left: 141 142
        on right: 132 133 136
    pointer <intval> (133)
        on left: 143 144 145 146
        on right: 128 145 146
    type_qualifier_list (134)
        on left: 147 148
        on right: 134 135 141 143 145 148
    parameter_type_list <prmList> (135)
        on left: 149 150
        on right: 139
    parameter_list <prmList> (136)
        on left: 151 152
        on right: 149 150 152
    parameter_declaration <prm> (137)
        on left: 153 154
        on right: 151 152
    identifier_list (138)
        on left: 155 156
        on right: 138 156
    type_name (139)
        on left: 157
        on right: 15 16 24 32
    initializer <expr> (140)
        on left: 158 159 160
        on right: 94 161 162
    initializer_list <dec> (141)
        on left: 161 162
        on right: 15 16 159 160 162
    designation_opt (142)
        on left: 163 164
        on right: 161 162
    designation (143)
        on left: 165
        on right: 163
    designator_list (144)
        on left: 166 167
        on right: 165 167
    designator (145)
        on left: 168 169
        on right: 166 167
    statement <expr> (146)
        on left: 170 171 172 173 174 175
        on right: 176 177 178 184 187 188 189 190 191 192
    labeled_statement <expr> (147)
        on left: 176 177 178
        on right: 170
    compound_statement <expr> (148)
        on left: 179 180
        on right: 171 202 203
    block_item_list <expr> (149)
        on left: 181 182
        on right: 180 182
    block_item <expr> (150)
        on left: 183 184
        on right: 181 182
    expression_statement <expr> (151)
        on left: 185 186
        on right: 172 192
    selection_statement <expr> (152)
        on left: 187 188 189
        on right: 173
    iteration_statement <expr> (153)
        on left: 190 191 192
        on right: 174
    jump_statement <expr> (154)
        on left: 193 194 195 196 197
        on right: 175
    translation_unit (155)
        on left: 198 199
        on right: 0 199
    external_declaration (156)
        on left: 200 201
        on right: 198 199
    function_definition (157)
        on left: 202 203
        on right: 200
    function_prototype <dec> (158)
        on left: 204
        on right: 203
    declaration_list (159)
        on left: 205 206
        on right: 202 206


State 0

    0 $accept: . translation_unit $end

    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31
    function_prototype       go to state 32


State 1

   97 storage_class_specifier: AUTO .

    $default  reduce using rule 97 (storage_class_specifier)


State 2

  100 type_specifier: CHAR_ .

    $default  reduce using rule 100 (type_specifier)


State 3

  124 type_qualifier: CONST .

    $default  reduce using rule 124 (type_qualifier)


State 4

  105 type_specifier: DOUBLE .

    $default  reduce using rule 105 (type_specifier)


State 5

  116 enum_specifier: ENUM . CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  117               | ENUM . IDENTIFIER CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  118               | ENUM . IDENTIFIER CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE
  119               | ENUM . IDENTIFIER

    CURLY_BRACE_OPEN  shift, and go to state 33
    IDENTIFIER        shift, and go to state 34


State 6

   95 storage_class_specifier: EXTERN .

    $default  reduce using rule 95 (storage_class_specifier)


State 7

  104 type_specifier: FLOAT_ .

    $default  reduce using rule 104 (type_specifier)


State 8

  127 function_specifier: INLINE .

    $default  reduce using rule 127 (function_specifier)


State 9

  102 type_specifier: INT_ .

    $default  reduce using rule 102 (type_specifier)


State 10

  103 type_specifier: LONG .

    $default  reduce using rule 103 (type_specifier)


State 11

   98 storage_class_specifier: REGISTER .

    $default  reduce using rule 98 (storage_class_specifier)


State 12

  125 type_qualifier: RESTRICT .

    $default  reduce using rule 125 (type_qualifier)


State 13

  101 type_specifier: SHORT .

    $default  reduce using rule 101 (type_specifier)


State 14

  106 type_specifier: SIGNED .

    $default  reduce using rule 106 (type_specifier)


State 15

   96 storage_class_specifier: STATIC .

    $default  reduce using rule 96 (storage_class_specifier)


State 16

  107 type_specifier: UNSIGNED .

    $default  reduce using rule 107 (type_specifier)


State 17

   99 type_specifier: VOID_ .

    $default  reduce using rule 99 (type_specifier)


State 18

  126 type_qualifier: VOLATILE .

    $default  reduce using rule 126 (type_qualifier)


State 19

  108 type_specifier: BOOL_ .

    $default  reduce using rule 108 (type_specifier)


State 20

  109 type_specifier: COMPLEX .

    $default  reduce using rule 109 (type_specifier)


State 21

  110 type_specifier: IMAGINARY .

    $default  reduce using rule 110 (type_specifier)


State 22

  201 external_declaration: declaration .

    $default  reduce using rule 201 (external_declaration)


State 23

   81 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   82            | declaration_specifiers . SEMICOLON
  202 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  204 function_prototype: declaration_specifiers . declarator

    PARENTHESIS_OPEN  shift, and go to state 35
    MULTIPLY          shift, and go to state 36
    SEMICOLON         shift, and go to state 37
    IDENTIFIER        shift, and go to state 38

    init_declarator_list  go to state 39
    init_declarator       go to state 40
    declarator            go to state 41
    direct_declarator     go to state 42
    pointer               go to state 43


State 24

   83 declaration_specifiers: storage_class_specifier . declaration_specifiers
   84                       | storage_class_specifier .

    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 84 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   85 declaration_specifiers: type_specifier . declaration_specifiers
   86                       | type_specifier .

    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  111 type_specifier: enum_specifier .

    $default  reduce using rule 111 (type_specifier)


State 27

   87 declaration_specifiers: type_qualifier . declaration_specifiers
   88                       | type_qualifier .

    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   89 declaration_specifiers: function_specifier . declaration_specifiers
   90                       | function_specifier .

    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 47
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit . $end
  199 translation_unit: translation_unit . external_declaration

    $end       shift, and go to state 48
    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 49
    function_definition      go to state 31
    function_prototype       go to state 32


State 30

  198 translation_unit: external_declaration .

    $default  reduce using rule 198 (translation_unit)


State 31

  200 external_declaration: function_definition .

    $default  reduce using rule 200 (external_declaration)


State 32

  203 function_definition: function_prototype . compound_statement

    CURLY_BRACE_OPEN  shift, and go to state 50

    compound_statement  go to state 51


State 33

  116 enum_specifier: ENUM CURLY_BRACE_OPEN . enumerator_list CURLY_BRACE_CLOSE

    IDENTIFIER  shift, and go to state 52

    enumerator_list  go to state 53
    enumerator       go to state 54


State 34

  117 enum_specifier: ENUM IDENTIFIER . CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE
  118               | ENUM IDENTIFIER . CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE
  119               | ENUM IDENTIFIER .

    CURLY_BRACE_OPEN  shift, and go to state 55

    $default  reduce using rule 119 (enum_specifier)


State 35

  131 direct_declarator: PARENTHESIS_OPEN . declarator PARENTHESIS_CLOSE

    PARENTHESIS_OPEN  shift, and go to state 35
    MULTIPLY          shift, and go to state 36
    IDENTIFIER        shift, and go to state 38

    declarator         go to state 56
    direct_declarator  go to state 42
    pointer            go to state 43


State 36

  143 pointer: MULTIPLY . type_qualifier_list
  144        | MULTIPLY .
  145        | MULTIPLY . type_qualifier_list pointer
  146        | MULTIPLY . pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MULTIPLY  shift, and go to state 36

    $default  reduce using rule 144 (pointer)

    type_qualifier       go to state 57
    pointer              go to state 58
    type_qualifier_list  go to state 59


State 37

   82 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 82 (declaration)


State 38

  130 direct_declarator: IDENTIFIER .

    $default  reduce using rule 130 (direct_declarator)


State 39

   81 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   92 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 60
    COMMA      shift, and go to state 61


State 40

   91 init_declarator_list: init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 41

   93 init_declarator: declarator .
   94                | declarator . ASSIGN_ initializer
  202 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  204 function_prototype: declaration_specifiers declarator .

    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ASSIGN_    shift, and go to state 62

    CURLY_BRACE_OPEN  reduce using rule 204 (function_prototype)
    $default          reduce using rule 93 (init_declarator)

    declaration              go to state 63
    declaration_specifiers   go to state 64
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list         go to state 65


State 42

  129 declarator: direct_declarator .
  132 direct_declarator: direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list_opt SQUARE_BRACE_CLOSE
  133                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list_opt assignment_expression SQUARE_BRACE_CLOSE
  134                  | direct_declarator . SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  135                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  136                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list_opt MULTIPLY SQUARE_BRACE_CLOSE
  137                  | direct_declarator . PARENTHESIS_OPEN parameter_type_list_opt PARENTHESIS_CLOSE
  138                  | direct_declarator . PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 66
    PARENTHESIS_OPEN   shift, and go to state 67

    $default  reduce using rule 129 (declarator)


State 43

  128 declarator: pointer . direct_declarator

    PARENTHESIS_OPEN  shift, and go to state 35
    IDENTIFIER        shift, and go to state 38

    direct_declarator  go to state 68


State 44

   83 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 83 (declaration_specifiers)


State 45

   85 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 85 (declaration_specifiers)


State 46

   87 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 87 (declaration_specifiers)


State 47

   89 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers)


State 48

    0 $accept: translation_unit $end .

    $default  accept


State 49

  199 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 199 (translation_unit)


State 50

  179 compound_statement: CURLY_BRACE_OPEN . CURLY_BRACE_CLOSE
  180                   | CURLY_BRACE_OPEN . block_item_list CURLY_BRACE_CLOSE

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CHAR_              shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT_             shift, and go to state 7
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    INLINE             shift, and go to state 8
    INT_               shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN_            shift, and go to state 77
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 78
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 79
    UNSIGNED           shift, and go to state 16
    VOID_              shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 80
    BOOL_              shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    CURLY_BRACE_CLOSE  shift, and go to state 82
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    declaration                go to state 115
    declaration_specifiers     go to state 64
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 116
    labeled_statement          go to state 117
    compound_statement         go to state 118
    block_item_list            go to state 119
    block_item                 go to state 120
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 51

  203 function_definition: function_prototype compound_statement .

    $default  reduce using rule 203 (function_definition)


State 52

  122 enumerator: IDENTIFIER .
  123           | IDENTIFIER . ASSIGN_ constant_expression

    ASSIGN_  shift, and go to state 125

    $default  reduce using rule 122 (enumerator)


State 53

  116 enum_specifier: ENUM CURLY_BRACE_OPEN enumerator_list . CURLY_BRACE_CLOSE
  121 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACE_CLOSE  shift, and go to state 126
    COMMA              shift, and go to state 127


State 54

  120 enumerator_list: enumerator .

    $default  reduce using rule 120 (enumerator_list)


State 55

  117 enum_specifier: ENUM IDENTIFIER CURLY_BRACE_OPEN . enumerator_list CURLY_BRACE_CLOSE
  118               | ENUM IDENTIFIER CURLY_BRACE_OPEN . enumerator_list COMMA CURLY_BRACE_CLOSE

    IDENTIFIER  shift, and go to state 52

    enumerator_list  go to state 128
    enumerator       go to state 54


State 56

  131 direct_declarator: PARENTHESIS_OPEN declarator . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 129


State 57

  147 type_qualifier_list: type_qualifier .

    $default  reduce using rule 147 (type_qualifier_list)


State 58

  146 pointer: MULTIPLY pointer .

    $default  reduce using rule 146 (pointer)


State 59

  143 pointer: MULTIPLY type_qualifier_list .
  145        | MULTIPLY type_qualifier_list . pointer
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18
    MULTIPLY  shift, and go to state 36

    $default  reduce using rule 143 (pointer)

    type_qualifier  go to state 130
    pointer         go to state 131


State 60

   81 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 81 (declaration)


State 61

   92 init_declarator_list: init_declarator_list COMMA . init_declarator

    PARENTHESIS_OPEN  shift, and go to state 35
    MULTIPLY          shift, and go to state 36
    IDENTIFIER        shift, and go to state 38

    init_declarator    go to state 132
    declarator         go to state 133
    direct_declarator  go to state 42
    pointer            go to state 43


State 62

   94 init_declarator: declarator ASSIGN_ . initializer

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 134
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 136
    initializer                go to state 137


State 63

  205 declaration_list: declaration .

    $default  reduce using rule 205 (declaration_list)


State 64

   81 declaration: declaration_specifiers . init_declarator_list SEMICOLON
   82            | declaration_specifiers . SEMICOLON

    PARENTHESIS_OPEN  shift, and go to state 35
    MULTIPLY          shift, and go to state 36
    SEMICOLON         shift, and go to state 37
    IDENTIFIER        shift, and go to state 38

    init_declarator_list  go to state 39
    init_declarator       go to state 40
    declarator            go to state 133
    direct_declarator     go to state 42
    pointer               go to state 43


State 65

  202 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  206 declaration_list: declaration_list . declaration

    AUTO              shift, and go to state 1
    CHAR_             shift, and go to state 2
    CONST             shift, and go to state 3
    DOUBLE            shift, and go to state 4
    ENUM              shift, and go to state 5
    EXTERN            shift, and go to state 6
    FLOAT_            shift, and go to state 7
    INLINE            shift, and go to state 8
    INT_              shift, and go to state 9
    LONG              shift, and go to state 10
    REGISTER          shift, and go to state 11
    RESTRICT          shift, and go to state 12
    SHORT             shift, and go to state 13
    SIGNED            shift, and go to state 14
    STATIC            shift, and go to state 15
    UNSIGNED          shift, and go to state 16
    VOID_             shift, and go to state 17
    VOLATILE          shift, and go to state 18
    BOOL_             shift, and go to state 19
    COMPLEX           shift, and go to state 20
    IMAGINARY         shift, and go to state 21
    CURLY_BRACE_OPEN  shift, and go to state 50

    declaration              go to state 138
    declaration_specifiers   go to state 64
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 139


State 66

  132 direct_declarator: direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list_opt SQUARE_BRACE_CLOSE
  133                  | direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list_opt assignment_expression SQUARE_BRACE_CLOSE
  134                  | direct_declarator SQUARE_BRACE_OPEN . STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  135                  | direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  136                  | direct_declarator SQUARE_BRACE_OPEN . type_qualifier_list_opt MULTIPLY SQUARE_BRACE_CLOSE

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 140
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 142 (type_qualifier_list_opt)

    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 141
    type_qualifier_list      go to state 142


State 67

  137 direct_declarator: direct_declarator PARENTHESIS_OPEN . parameter_type_list_opt PARENTHESIS_CLOSE
  138                  | direct_declarator PARENTHESIS_OPEN . identifier_list PARENTHESIS_CLOSE

    AUTO        shift, and go to state 1
    CHAR_       shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    FLOAT_      shift, and go to state 7
    INLINE      shift, and go to state 8
    INT_        shift, and go to state 9
    LONG        shift, and go to state 10
    REGISTER    shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID_       shift, and go to state 17
    VOLATILE    shift, and go to state 18
    BOOL_       shift, and go to state 19
    COMPLEX     shift, and go to state 20
    IMAGINARY   shift, and go to state 21
    IDENTIFIER  shift, and go to state 143

    $default  reduce using rule 140 (parameter_type_list_opt)

    declaration_specifiers   go to state 144
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list_opt  go to state 145
    parameter_type_list      go to state 146
    parameter_list           go to state 147
    parameter_declaration    go to state 148
    identifier_list          go to state 149


State 68

  128 declarator: pointer direct_declarator .
  132 direct_declarator: direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list_opt SQUARE_BRACE_CLOSE
  133                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list_opt assignment_expression SQUARE_BRACE_CLOSE
  134                  | direct_declarator . SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE
  135                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE
  136                  | direct_declarator . SQUARE_BRACE_OPEN type_qualifier_list_opt MULTIPLY SQUARE_BRACE_CLOSE
  137                  | direct_declarator . PARENTHESIS_OPEN parameter_type_list_opt PARENTHESIS_CLOSE
  138                  | direct_declarator . PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 66
    PARENTHESIS_OPEN   shift, and go to state 67

    $default  reduce using rule 128 (declarator)


State 69

  195 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 70

  177 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 152
    constant_expression        go to state 153


State 71

  194 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 154


State 72

  178 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 155


State 73

  191 iteration_statement: DO . M statement M WHILE PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 63 (M)

    M  go to state 156


State 74

  192 iteration_statement: FOR . PARENTHESIS_OPEN expression_statement M expression_statement N M expression N PARENTHESIS_CLOSE M statement

    PARENTHESIS_OPEN  shift, and go to state 157


State 75

  193 jump_statement: GOTO_ . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 158


State 76

  187 selection_statement: IF . PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N
  188                    | IF . PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M statement N

    PARENTHESIS_OPEN  shift, and go to state 159


State 77

  196 jump_statement: RETURN_ . SEMICOLON
  197               | RETURN_ . expression SEMICOLON

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 160
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 161


State 78

   23 unary_expression: SIZEOF . unary_expression
   24                 | SIZEOF . PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 162
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 163
    unary_operator      go to state 100


State 79

  189 selection_statement: SWITCH . PARENTHESIS_OPEN expression PARENTHESIS_CLOSE statement

    PARENTHESIS_OPEN  shift, and go to state 164


State 80

  190 iteration_statement: WHILE . M PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement

    $default  reduce using rule 63 (M)

    M  go to state 165


State 81

    6 primary_expression: PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE
   15 postfix_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   32 cast_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE cast_expression

    CHAR_              shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    FLOAT_             shift, and go to state 7
    INT_               shift, and go to state 9
    LONG               shift, and go to state 10
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 78
    UNSIGNED           shift, and go to state 16
    VOID_              shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL_              shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 166
    type_specifier             go to state 167
    specifier_qualifier_list   go to state 168
    enum_specifier             go to state 26
    type_qualifier             go to state 169
    type_name                  go to state 170


State 82

  179 compound_statement: CURLY_BRACE_OPEN CURLY_BRACE_CLOSE .

    $default  reduce using rule 179 (compound_statement)


State 83

   20 unary_expression: INCREMENT . unary_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 171
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 172
    unary_operator      go to state 100


State 84

   21 unary_expression: DECREMENT . unary_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 171
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 173
    unary_operator      go to state 100


State 85

   25 unary_operator: BITWISE_AND .

    $default  reduce using rule 25 (unary_operator)


State 86

   26 unary_operator: MULTIPLY .

    $default  reduce using rule 26 (unary_operator)


State 87

   27 unary_operator: ADD_ .

    $default  reduce using rule 27 (unary_operator)


State 88

   28 unary_operator: SUBTRACT .

    $default  reduce using rule 28 (unary_operator)


State 89

   29 unary_operator: BITWISE_NOR .

    $default  reduce using rule 29 (unary_operator)


State 90

   30 unary_operator: NOT .

    $default  reduce using rule 30 (unary_operator)


State 91

  186 expression_statement: SEMICOLON .

    $default  reduce using rule 186 (expression_statement)


State 92

    1 primary_expression: IDENTIFIER .
  176 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 174

    $default  reduce using rule 1 (primary_expression)


State 93

    2 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 2 (primary_expression)


State 94

    3 primary_expression: FLOATING_CONSTANT .

    $default  reduce using rule 3 (primary_expression)


State 95

    4 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 4 (primary_expression)


State 96

    5 primary_expression: STRING_LITERAL .

    $default  reduce using rule 5 (primary_expression)


State 97

    7 postfix_expression: primary_expression .

    $default  reduce using rule 7 (postfix_expression)


State 98

    8 postfix_expression: postfix_expression . SQUARE_BRACE_OPEN expression SQUARE_BRACE_CLOSE
    9                   | postfix_expression . PARENTHESIS_OPEN PARENTHESIS_CLOSE
   10                   | postfix_expression . PARENTHESIS_OPEN argument_expression_list PARENTHESIS_CLOSE
   11                   | postfix_expression . DOT IDENTIFIER
   12                   | postfix_expression . ARROW IDENTIFIER
   13                   | postfix_expression . INCREMENT
   14                   | postfix_expression . DECREMENT
   19 unary_expression: postfix_expression .

    SQUARE_BRACE_OPEN  shift, and go to state 175
    PARENTHESIS_OPEN   shift, and go to state 176
    DOT                shift, and go to state 177
    ARROW              shift, and go to state 178
    INCREMENT          shift, and go to state 179
    DECREMENT          shift, and go to state 180

    $default  reduce using rule 19 (unary_expression)


State 99

   31 cast_expression: unary_expression .
   66 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN_          shift, and go to state 181
    MULTIPLY_ASSIGN  shift, and go to state 182
    DIVIDE_ASSIGN    shift, and go to state 183
    MODULO_ASSIGN    shift, and go to state 184
    ADD_ASSIGN       shift, and go to state 185
    SUBTRACT_ASSIGN  shift, and go to state 186
    LSHIFT_ASSIGN    shift, and go to state 187
    RSHIFT_ASSIGN    shift, and go to state 188
    AND_ASSIGN       shift, and go to state 189
    XOR_ASSIGN       shift, and go to state 190
    OR_ASSIGN        shift, and go to state 191

    $default  reduce using rule 31 (cast_expression)

    assignment_operator  go to state 192


State 100

   22 unary_expression: unary_operator . cast_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 151
    unary_operator      go to state 100
    cast_expression     go to state 193


State 101

   33 multiplicative_expression: cast_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 102

   34 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   35                          | multiplicative_expression . DIVIDE cast_expression
   36                          | multiplicative_expression . MODULO cast_expression
   37 additive_expression: multiplicative_expression .

    MULTIPLY  shift, and go to state 194
    DIVIDE    shift, and go to state 195
    MODULO    shift, and go to state 196

    $default  reduce using rule 37 (additive_expression)


State 103

   38 additive_expression: additive_expression . ADD_ multiplicative_expression
   39                    | additive_expression . SUBTRACT multiplicative_expression
   40 shift_expression: additive_expression .

    ADD_      shift, and go to state 197
    SUBTRACT  shift, and go to state 198

    $default  reduce using rule 40 (shift_expression)


State 104

   41 shift_expression: shift_expression . LSHIFT additive_expression
   42                 | shift_expression . RSHIFT additive_expression
   43 relational_expression: shift_expression .

    LSHIFT  shift, and go to state 199
    RSHIFT  shift, and go to state 200

    $default  reduce using rule 43 (relational_expression)


State 105

   44 relational_expression: relational_expression . LESS_THAN shift_expression
   45                      | relational_expression . GREATER_THAN shift_expression
   46                      | relational_expression . LESS_THAN_EQUAL shift_expression
   47                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   48 equality_expression: relational_expression .

    LESS_THAN           shift, and go to state 201
    GREATER_THAN        shift, and go to state 202
    LESS_THAN_EQUAL     shift, and go to state 203
    GREATER_THAN_EQUAL  shift, and go to state 204

    $default  reduce using rule 48 (equality_expression)


State 106

   49 equality_expression: equality_expression . EQUAL relational_expression
   50                    | equality_expression . NOT_EQUAL relational_expression
   51 and_expression: equality_expression .

    EQUAL      shift, and go to state 205
    NOT_EQUAL  shift, and go to state 206

    $default  reduce using rule 51 (and_expression)


State 107

   52 and_expression: and_expression . BITWISE_AND equality_expression
   53 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 207

    $default  reduce using rule 53 (exclusive_or_expression)


State 108

   54 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   55 inclusive_or_expression: exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 208

    $default  reduce using rule 55 (inclusive_or_expression)


State 109

   56 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   57 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 209

    $default  reduce using rule 57 (logical_and_expression)


State 110

   58 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   59 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 210

    $default  reduce using rule 59 (logical_or_expression)


State 111

   60 logical_or_expression: logical_or_expression . LOGICAL_OR M logical_and_expression
   61 conditional_expression: logical_or_expression .
   62                       | logical_or_expression . N QUESTION_MARK M expression N COLON M conditional_expression

    LOGICAL_OR  shift, and go to state 211

    QUESTION_MARK  reduce using rule 64 (N)
    $default       reduce using rule 61 (conditional_expression)

    N  go to state 212


State 112

   65 assignment_expression: conditional_expression .

    $default  reduce using rule 65 (assignment_expression)


State 113

   78 expression: assignment_expression .

    $default  reduce using rule 78 (expression)


State 114

   79 expression: expression . COMMA assignment_expression
  185 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 213
    COMMA      shift, and go to state 214


State 115

  183 block_item: declaration .

    $default  reduce using rule 183 (block_item)


State 116

  184 block_item: statement .

    $default  reduce using rule 184 (block_item)


State 117

  170 statement: labeled_statement .

    $default  reduce using rule 170 (statement)


State 118

  171 statement: compound_statement .

    $default  reduce using rule 171 (statement)


State 119

  180 compound_statement: CURLY_BRACE_OPEN block_item_list . CURLY_BRACE_CLOSE
  182 block_item_list: block_item_list . M block_item

    CURLY_BRACE_CLOSE  shift, and go to state 215

    $default  reduce using rule 63 (M)

    M  go to state 216


State 120

  181 block_item_list: block_item .

    $default  reduce using rule 181 (block_item_list)


State 121

  172 statement: expression_statement .

    $default  reduce using rule 172 (statement)


State 122

  173 statement: selection_statement .

    $default  reduce using rule 173 (statement)


State 123

  174 statement: iteration_statement .

    $default  reduce using rule 174 (statement)


State 124

  175 statement: jump_statement .

    $default  reduce using rule 175 (statement)


State 125

  123 enumerator: IDENTIFIER ASSIGN_ . constant_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 152
    constant_expression        go to state 217


State 126

  116 enum_specifier: ENUM CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 116 (enum_specifier)


State 127

  121 enumerator_list: enumerator_list COMMA . enumerator

    IDENTIFIER  shift, and go to state 52

    enumerator  go to state 218


State 128

  117 enum_specifier: ENUM IDENTIFIER CURLY_BRACE_OPEN enumerator_list . CURLY_BRACE_CLOSE
  118               | ENUM IDENTIFIER CURLY_BRACE_OPEN enumerator_list . COMMA CURLY_BRACE_CLOSE
  121 enumerator_list: enumerator_list . COMMA enumerator

    CURLY_BRACE_CLOSE  shift, and go to state 219
    COMMA              shift, and go to state 220


State 129

  131 direct_declarator: PARENTHESIS_OPEN declarator PARENTHESIS_CLOSE .

    $default  reduce using rule 131 (direct_declarator)


State 130

  148 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 148 (type_qualifier_list)


State 131

  145 pointer: MULTIPLY type_qualifier_list pointer .

    $default  reduce using rule 145 (pointer)


State 132

   92 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 133

   93 init_declarator: declarator .
   94                | declarator . ASSIGN_ initializer

    ASSIGN_  shift, and go to state 62

    $default  reduce using rule 93 (init_declarator)


State 134

  159 initializer: CURLY_BRACE_OPEN . initializer_list CURLY_BRACE_CLOSE
  160            | CURLY_BRACE_OPEN . initializer_list COMMA CURLY_BRACE_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 221
    DOT                shift, and go to state 222

    $default  reduce using rule 164 (designation_opt)

    initializer_list  go to state 223
    designation_opt   go to state 224
    designation       go to state 225
    designator_list   go to state 226
    designator        go to state 227


State 135

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 136

  158 initializer: assignment_expression .

    $default  reduce using rule 158 (initializer)


State 137

   94 init_declarator: declarator ASSIGN_ initializer .

    $default  reduce using rule 94 (init_declarator)


State 138

  206 declaration_list: declaration_list declaration .

    $default  reduce using rule 206 (declaration_list)


State 139

  202 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 202 (function_definition)


State 140

  134 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC . type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    type_qualifier       go to state 57
    type_qualifier_list  go to state 228


State 141

  132 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt . SQUARE_BRACE_CLOSE
  133                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt . assignment_expression SQUARE_BRACE_CLOSE
  136                  | direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt . MULTIPLY SQUARE_BRACE_CLOSE

    SIZEOF              shift, and go to state 78
    SQUARE_BRACE_CLOSE  shift, and go to state 229
    PARENTHESIS_OPEN    shift, and go to state 81
    INCREMENT           shift, and go to state 83
    DECREMENT           shift, and go to state 84
    BITWISE_AND         shift, and go to state 85
    MULTIPLY            shift, and go to state 230
    ADD_                shift, and go to state 87
    SUBTRACT            shift, and go to state 88
    BITWISE_NOR         shift, and go to state 89
    NOT                 shift, and go to state 90
    IDENTIFIER          shift, and go to state 135
    INTEGER_CONSTANT    shift, and go to state 93
    FLOATING_CONSTANT   shift, and go to state 94
    CHAR_CONSTANT       shift, and go to state 95
    STRING_LITERAL      shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 231


State 142

  135 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list . STATIC assignment_expression SQUARE_BRACE_CLOSE
  141 type_qualifier_list_opt: type_qualifier_list .
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 232
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 141 (type_qualifier_list_opt)

    type_qualifier  go to state 130


State 143

  155 identifier_list: IDENTIFIER .

    $default  reduce using rule 155 (identifier_list)


State 144

  153 parameter_declaration: declaration_specifiers . declarator
  154                      | declaration_specifiers .

    PARENTHESIS_OPEN  shift, and go to state 35
    MULTIPLY          shift, and go to state 36
    IDENTIFIER        shift, and go to state 38

    $default  reduce using rule 154 (parameter_declaration)

    declarator         go to state 233
    direct_declarator  go to state 42
    pointer            go to state 43


State 145

  137 direct_declarator: direct_declarator PARENTHESIS_OPEN parameter_type_list_opt . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 234


State 146

  139 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 139 (parameter_type_list_opt)


State 147

  149 parameter_type_list: parameter_list .
  150                    | parameter_list . COMMA ELLIPSIS
  152 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 235

    $default  reduce using rule 149 (parameter_type_list)


State 148

  151 parameter_list: parameter_declaration .

    $default  reduce using rule 151 (parameter_list)


State 149

  138 direct_declarator: direct_declarator PARENTHESIS_OPEN identifier_list . PARENTHESIS_CLOSE
  156 identifier_list: identifier_list . COMMA IDENTIFIER

    PARENTHESIS_CLOSE  shift, and go to state 236
    COMMA              shift, and go to state 237


State 150

  195 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 195 (jump_statement)


State 151

   31 cast_expression: unary_expression .

    $default  reduce using rule 31 (cast_expression)


State 152

   80 constant_expression: conditional_expression .

    $default  reduce using rule 80 (constant_expression)


State 153

  177 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 238


State 154

  194 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 194 (jump_statement)


State 155

  178 labeled_statement: DEFAULT COLON . statement

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 239
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 156

  191 iteration_statement: DO M . statement M WHILE PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE SEMICOLON

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 240
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 157

  192 iteration_statement: FOR PARENTHESIS_OPEN . expression_statement M expression_statement N M expression N PARENTHESIS_CLOSE M statement

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    expression_statement       go to state 241


State 158

  193 jump_statement: GOTO_ IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 242


State 159

  187 selection_statement: IF PARENTHESIS_OPEN . expression N PARENTHESIS_CLOSE M statement N
  188                    | IF PARENTHESIS_OPEN . expression N PARENTHESIS_CLOSE M statement N ELSE M statement N

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 243


State 160

  196 jump_statement: RETURN_ SEMICOLON .

    $default  reduce using rule 196 (jump_statement)


State 161

   79 expression: expression . COMMA assignment_expression
  197 jump_statement: RETURN_ expression . SEMICOLON

    SEMICOLON  shift, and go to state 244
    COMMA      shift, and go to state 214


State 162

    6 primary_expression: PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE
   15 postfix_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   24 unary_expression: SIZEOF PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE

    CHAR_              shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    FLOAT_             shift, and go to state 7
    INT_               shift, and go to state 9
    LONG               shift, and go to state 10
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 78
    UNSIGNED           shift, and go to state 16
    VOID_              shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL_              shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 166
    type_specifier             go to state 167
    specifier_qualifier_list   go to state 168
    enum_specifier             go to state 26
    type_qualifier             go to state 169
    type_name                  go to state 245


State 163

   23 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 164

  189 selection_statement: SWITCH PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE statement

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 246


State 165

  190 iteration_statement: WHILE M . PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement

    PARENTHESIS_OPEN  shift, and go to state 247


State 166

    6 primary_expression: PARENTHESIS_OPEN expression . PARENTHESIS_CLOSE
   79 expression: expression . COMMA assignment_expression

    PARENTHESIS_CLOSE  shift, and go to state 248
    COMMA              shift, and go to state 214


State 167

  112 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT_     shift, and go to state 7
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 167
    specifier_qualifier_list      go to state 249
    specifier_qualifier_list_opt  go to state 250
    enum_specifier                go to state 26
    type_qualifier                go to state 169


State 168

  157 type_name: specifier_qualifier_list .

    $default  reduce using rule 157 (type_name)


State 169

  113 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    FLOAT_     shift, and go to state 7
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 167
    specifier_qualifier_list      go to state 249
    specifier_qualifier_list_opt  go to state 251
    enum_specifier                go to state 26
    type_qualifier                go to state 169


State 170

   15 postfix_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   32 cast_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE cast_expression

    PARENTHESIS_CLOSE  shift, and go to state 252


State 171

    6 primary_expression: PARENTHESIS_OPEN . expression PARENTHESIS_CLOSE
   15 postfix_expression: PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN . type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

    CHAR_              shift, and go to state 2
    CONST              shift, and go to state 3
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    FLOAT_             shift, and go to state 7
    INT_               shift, and go to state 9
    LONG               shift, and go to state 10
    RESTRICT           shift, and go to state 12
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 78
    UNSIGNED           shift, and go to state 16
    VOID_              shift, and go to state 17
    VOLATILE           shift, and go to state 18
    BOOL_              shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 166
    type_specifier             go to state 167
    specifier_qualifier_list   go to state 168
    enum_specifier             go to state 26
    type_qualifier             go to state 169
    type_name                  go to state 253


State 172

   20 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 173

   21 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 174

  176 labeled_statement: IDENTIFIER COLON . statement

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 254
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 175

    8 postfix_expression: postfix_expression SQUARE_BRACE_OPEN . expression SQUARE_BRACE_CLOSE

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 255


State 176

    9 postfix_expression: postfix_expression PARENTHESIS_OPEN . PARENTHESIS_CLOSE
   10                   | postfix_expression PARENTHESIS_OPEN . argument_expression_list PARENTHESIS_CLOSE

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    PARENTHESIS_CLOSE  shift, and go to state 256
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    argument_expression_list   go to state 257
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 258


State 177

   11 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 259


State 178

   12 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 260


State 179

   13 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 13 (postfix_expression)


State 180

   14 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 14 (postfix_expression)


State 181

   67 assignment_operator: ASSIGN_ .

    $default  reduce using rule 67 (assignment_operator)


State 182

   68 assignment_operator: MULTIPLY_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 183

   69 assignment_operator: DIVIDE_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 184

   70 assignment_operator: MODULO_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 185

   71 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 186

   72 assignment_operator: SUBTRACT_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 187

   73 assignment_operator: LSHIFT_ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 188

   74 assignment_operator: RSHIFT_ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 189

   75 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 190

   76 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 76 (assignment_operator)


State 191

   77 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 77 (assignment_operator)


State 192

   66 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 261


State 193

   22 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 22 (unary_expression)


State 194

   34 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 151
    unary_operator      go to state 100
    cast_expression     go to state 262


State 195

   35 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 151
    unary_operator      go to state 100
    cast_expression     go to state 263


State 196

   36 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 151
    unary_operator      go to state 100
    cast_expression     go to state 264


State 197

   38 additive_expression: additive_expression ADD_ . multiplicative_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 265


State 198

   39 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 266


State 199

   41 shift_expression: shift_expression LSHIFT . additive_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 267


State 200

   42 shift_expression: shift_expression RSHIFT . additive_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 268


State 201

   44 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 269


State 202

   45 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 270


State 203

   46 relational_expression: relational_expression LESS_THAN_EQUAL . shift_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 271


State 204

   47 relational_expression: relational_expression GREATER_THAN_EQUAL . shift_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 272


State 205

   49 equality_expression: equality_expression EQUAL . relational_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 273


State 206

   50 equality_expression: equality_expression NOT_EQUAL . relational_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 274


State 207

   52 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 275


State 208

   54 exclusive_or_expression: exclusive_or_expression BITWISE_XOR . and_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 276


State 209

   56 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 277


State 210

   58 logical_and_expression: logical_and_expression LOGICAL_AND . M inclusive_or_expression

    $default  reduce using rule 63 (M)

    M  go to state 278


State 211

   60 logical_or_expression: logical_or_expression LOGICAL_OR . M logical_and_expression

    $default  reduce using rule 63 (M)

    M  go to state 279


State 212

   62 conditional_expression: logical_or_expression N . QUESTION_MARK M expression N COLON M conditional_expression

    QUESTION_MARK  shift, and go to state 280


State 213

  185 expression_statement: expression SEMICOLON .

    $default  reduce using rule 185 (expression_statement)


State 214

   79 expression: expression COMMA . assignment_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 281


State 215

  180 compound_statement: CURLY_BRACE_OPEN block_item_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 180 (compound_statement)


State 216

  182 block_item_list: block_item_list M . block_item

    AUTO               shift, and go to state 1
    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CHAR_              shift, and go to state 2
    CONST              shift, and go to state 3
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    DOUBLE             shift, and go to state 4
    ENUM               shift, and go to state 5
    EXTERN             shift, and go to state 6
    FLOAT_             shift, and go to state 7
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    INLINE             shift, and go to state 8
    INT_               shift, and go to state 9
    LONG               shift, and go to state 10
    REGISTER           shift, and go to state 11
    RESTRICT           shift, and go to state 12
    RETURN_            shift, and go to state 77
    SHORT              shift, and go to state 13
    SIGNED             shift, and go to state 14
    SIZEOF             shift, and go to state 78
    STATIC             shift, and go to state 15
    SWITCH             shift, and go to state 79
    UNSIGNED           shift, and go to state 16
    VOID_              shift, and go to state 17
    VOLATILE           shift, and go to state 18
    WHILE              shift, and go to state 80
    BOOL_              shift, and go to state 19
    COMPLEX            shift, and go to state 20
    IMAGINARY          shift, and go to state 21
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    declaration                go to state 115
    declaration_specifiers     go to state 64
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 116
    labeled_statement          go to state 117
    compound_statement         go to state 118
    block_item                 go to state 282
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 217

  123 enumerator: IDENTIFIER ASSIGN_ constant_expression .

    $default  reduce using rule 123 (enumerator)


State 218

  121 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 121 (enumerator_list)


State 219

  117 enum_specifier: ENUM IDENTIFIER CURLY_BRACE_OPEN enumerator_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 117 (enum_specifier)


State 220

  118 enum_specifier: ENUM IDENTIFIER CURLY_BRACE_OPEN enumerator_list COMMA . CURLY_BRACE_CLOSE
  121 enumerator_list: enumerator_list COMMA . enumerator

    CURLY_BRACE_CLOSE  shift, and go to state 283
    IDENTIFIER         shift, and go to state 52

    enumerator  go to state 218


State 221

  168 designator: SQUARE_BRACE_OPEN . constant_expression SQUARE_BRACE_CLOSE

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 152
    constant_expression        go to state 284


State 222

  169 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 285


State 223

  159 initializer: CURLY_BRACE_OPEN initializer_list . CURLY_BRACE_CLOSE
  160            | CURLY_BRACE_OPEN initializer_list . COMMA CURLY_BRACE_CLOSE
  162 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACE_CLOSE  shift, and go to state 286
    COMMA              shift, and go to state 287


State 224

  161 initializer_list: designation_opt . initializer

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 134
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 136
    initializer                go to state 288


State 225

  163 designation_opt: designation .

    $default  reduce using rule 163 (designation_opt)


State 226

  165 designation: designator_list . ASSIGN_
  167 designator_list: designator_list . designator

    SQUARE_BRACE_OPEN  shift, and go to state 221
    DOT                shift, and go to state 222
    ASSIGN_            shift, and go to state 289

    designator  go to state 290


State 227

  166 designator_list: designator .

    $default  reduce using rule 166 (designator_list)


State 228

  134 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list . assignment_expression SQUARE_BRACE_CLOSE
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST              shift, and go to state 3
    RESTRICT           shift, and go to state 12
    SIZEOF             shift, and go to state 78
    VOLATILE           shift, and go to state 18
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 291
    type_qualifier             go to state 130


State 229

  132 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt SQUARE_BRACE_CLOSE .

    $default  reduce using rule 132 (direct_declarator)


State 230

   26 unary_operator: MULTIPLY .
  136 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt MULTIPLY . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 292

    $default  reduce using rule 26 (unary_operator)


State 231

  133 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 293


State 232

  135 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC . assignment_expression SQUARE_BRACE_CLOSE

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 294


State 233

  153 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 153 (parameter_declaration)


State 234

  137 direct_declarator: direct_declarator PARENTHESIS_OPEN parameter_type_list_opt PARENTHESIS_CLOSE .

    $default  reduce using rule 137 (direct_declarator)


State 235

  150 parameter_type_list: parameter_list COMMA . ELLIPSIS
  152 parameter_list: parameter_list COMMA . parameter_declaration

    AUTO       shift, and go to state 1
    CHAR_      shift, and go to state 2
    CONST      shift, and go to state 3
    DOUBLE     shift, and go to state 4
    ENUM       shift, and go to state 5
    EXTERN     shift, and go to state 6
    FLOAT_     shift, and go to state 7
    INLINE     shift, and go to state 8
    INT_       shift, and go to state 9
    LONG       shift, and go to state 10
    REGISTER   shift, and go to state 11
    RESTRICT   shift, and go to state 12
    SHORT      shift, and go to state 13
    SIGNED     shift, and go to state 14
    STATIC     shift, and go to state 15
    UNSIGNED   shift, and go to state 16
    VOID_      shift, and go to state 17
    VOLATILE   shift, and go to state 18
    BOOL_      shift, and go to state 19
    COMPLEX    shift, and go to state 20
    IMAGINARY  shift, and go to state 21
    ELLIPSIS   shift, and go to state 295

    declaration_specifiers   go to state 144
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 296


State 236

  138 direct_declarator: direct_declarator PARENTHESIS_OPEN identifier_list PARENTHESIS_CLOSE .

    $default  reduce using rule 138 (direct_declarator)


State 237

  156 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 297


State 238

  177 labeled_statement: CASE constant_expression COLON . statement

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 298
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 239

  178 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 178 (labeled_statement)


State 240

  191 iteration_statement: DO M statement . M WHILE PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 63 (M)

    M  go to state 299


State 241

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement . M expression_statement N M expression N PARENTHESIS_CLOSE M statement

    $default  reduce using rule 63 (M)

    M  go to state 300


State 242

  193 jump_statement: GOTO_ IDENTIFIER SEMICOLON .

    $default  reduce using rule 193 (jump_statement)


State 243

   79 expression: expression . COMMA assignment_expression
  187 selection_statement: IF PARENTHESIS_OPEN expression . N PARENTHESIS_CLOSE M statement N
  188                    | IF PARENTHESIS_OPEN expression . N PARENTHESIS_CLOSE M statement N ELSE M statement N

    COMMA  shift, and go to state 214

    $default  reduce using rule 64 (N)

    N  go to state 301


State 244

  197 jump_statement: RETURN_ expression SEMICOLON .

    $default  reduce using rule 197 (jump_statement)


State 245

   15 postfix_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   24 unary_expression: SIZEOF PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 302


State 246

   79 expression: expression . COMMA assignment_expression
  189 selection_statement: SWITCH PARENTHESIS_OPEN expression . PARENTHESIS_CLOSE statement

    PARENTHESIS_CLOSE  shift, and go to state 303
    COMMA              shift, and go to state 214


State 247

  190 iteration_statement: WHILE M PARENTHESIS_OPEN . expression N PARENTHESIS_CLOSE M statement

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 304


State 248

    6 primary_expression: PARENTHESIS_OPEN expression PARENTHESIS_CLOSE .

    $default  reduce using rule 6 (primary_expression)


State 249

  114 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 114 (specifier_qualifier_list_opt)


State 250

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 112 (specifier_qualifier_list)


State 251

  113 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 252

   15 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   32 cast_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . cast_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 305
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression  go to state 97
    postfix_expression  go to state 98
    unary_expression    go to state 151
    unary_operator      go to state 100
    cast_expression     go to state 306


State 253

   15 postfix_expression: PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name . PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

    PARENTHESIS_CLOSE  shift, and go to state 307


State 254

  176 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 176 (labeled_statement)


State 255

    8 postfix_expression: postfix_expression SQUARE_BRACE_OPEN expression . SQUARE_BRACE_CLOSE
   79 expression: expression . COMMA assignment_expression

    SQUARE_BRACE_CLOSE  shift, and go to state 308
    COMMA               shift, and go to state 214


State 256

    9 postfix_expression: postfix_expression PARENTHESIS_OPEN PARENTHESIS_CLOSE .

    $default  reduce using rule 9 (postfix_expression)


State 257

   10 postfix_expression: postfix_expression PARENTHESIS_OPEN argument_expression_list . PARENTHESIS_CLOSE
   18 argument_expression_list: argument_expression_list . COMMA assignment_expression

    PARENTHESIS_CLOSE  shift, and go to state 309
    COMMA              shift, and go to state 310


State 258

   17 argument_expression_list: assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


State 259

   11 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 11 (postfix_expression)


State 260

   12 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 261

   66 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


State 262

   34 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 263

   35 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 264

   36 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 265

   34 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   35                          | multiplicative_expression . DIVIDE cast_expression
   36                          | multiplicative_expression . MODULO cast_expression
   38 additive_expression: additive_expression ADD_ multiplicative_expression .

    MULTIPLY  shift, and go to state 194
    DIVIDE    shift, and go to state 195
    MODULO    shift, and go to state 196

    $default  reduce using rule 38 (additive_expression)


State 266

   34 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   35                          | multiplicative_expression . DIVIDE cast_expression
   36                          | multiplicative_expression . MODULO cast_expression
   39 additive_expression: additive_expression SUBTRACT multiplicative_expression .

    MULTIPLY  shift, and go to state 194
    DIVIDE    shift, and go to state 195
    MODULO    shift, and go to state 196

    $default  reduce using rule 39 (additive_expression)


State 267

   38 additive_expression: additive_expression . ADD_ multiplicative_expression
   39                    | additive_expression . SUBTRACT multiplicative_expression
   41 shift_expression: shift_expression LSHIFT additive_expression .

    ADD_      shift, and go to state 197
    SUBTRACT  shift, and go to state 198

    $default  reduce using rule 41 (shift_expression)


State 268

   38 additive_expression: additive_expression . ADD_ multiplicative_expression
   39                    | additive_expression . SUBTRACT multiplicative_expression
   42 shift_expression: shift_expression RSHIFT additive_expression .

    ADD_      shift, and go to state 197
    SUBTRACT  shift, and go to state 198

    $default  reduce using rule 42 (shift_expression)


State 269

   41 shift_expression: shift_expression . LSHIFT additive_expression
   42                 | shift_expression . RSHIFT additive_expression
   44 relational_expression: relational_expression LESS_THAN shift_expression .

    LSHIFT  shift, and go to state 199
    RSHIFT  shift, and go to state 200

    $default  reduce using rule 44 (relational_expression)


State 270

   41 shift_expression: shift_expression . LSHIFT additive_expression
   42                 | shift_expression . RSHIFT additive_expression
   45 relational_expression: relational_expression GREATER_THAN shift_expression .

    LSHIFT  shift, and go to state 199
    RSHIFT  shift, and go to state 200

    $default  reduce using rule 45 (relational_expression)


State 271

   41 shift_expression: shift_expression . LSHIFT additive_expression
   42                 | shift_expression . RSHIFT additive_expression
   46 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression .

    LSHIFT  shift, and go to state 199
    RSHIFT  shift, and go to state 200

    $default  reduce using rule 46 (relational_expression)


State 272

   41 shift_expression: shift_expression . LSHIFT additive_expression
   42                 | shift_expression . RSHIFT additive_expression
   47 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression .

    LSHIFT  shift, and go to state 199
    RSHIFT  shift, and go to state 200

    $default  reduce using rule 47 (relational_expression)


State 273

   44 relational_expression: relational_expression . LESS_THAN shift_expression
   45                      | relational_expression . GREATER_THAN shift_expression
   46                      | relational_expression . LESS_THAN_EQUAL shift_expression
   47                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   49 equality_expression: equality_expression EQUAL relational_expression .

    LESS_THAN           shift, and go to state 201
    GREATER_THAN        shift, and go to state 202
    LESS_THAN_EQUAL     shift, and go to state 203
    GREATER_THAN_EQUAL  shift, and go to state 204

    $default  reduce using rule 49 (equality_expression)


State 274

   44 relational_expression: relational_expression . LESS_THAN shift_expression
   45                      | relational_expression . GREATER_THAN shift_expression
   46                      | relational_expression . LESS_THAN_EQUAL shift_expression
   47                      | relational_expression . GREATER_THAN_EQUAL shift_expression
   50 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN           shift, and go to state 201
    GREATER_THAN        shift, and go to state 202
    LESS_THAN_EQUAL     shift, and go to state 203
    GREATER_THAN_EQUAL  shift, and go to state 204

    $default  reduce using rule 50 (equality_expression)


State 275

   49 equality_expression: equality_expression . EQUAL relational_expression
   50                    | equality_expression . NOT_EQUAL relational_expression
   52 and_expression: and_expression BITWISE_AND equality_expression .

    EQUAL      shift, and go to state 205
    NOT_EQUAL  shift, and go to state 206

    $default  reduce using rule 52 (and_expression)


State 276

   52 and_expression: and_expression . BITWISE_AND equality_expression
   54 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression .

    BITWISE_AND  shift, and go to state 207

    $default  reduce using rule 54 (exclusive_or_expression)


State 277

   54 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   56 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 208

    $default  reduce using rule 56 (inclusive_or_expression)


State 278

   58 logical_and_expression: logical_and_expression LOGICAL_AND M . inclusive_or_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 311


State 279

   60 logical_or_expression: logical_or_expression LOGICAL_OR M . logical_and_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 312


State 280

   62 conditional_expression: logical_or_expression N QUESTION_MARK . M expression N COLON M conditional_expression

    $default  reduce using rule 63 (M)

    M  go to state 313


State 281

   79 expression: expression COMMA assignment_expression .

    $default  reduce using rule 79 (expression)


State 282

  182 block_item_list: block_item_list M block_item .

    $default  reduce using rule 182 (block_item_list)


State 283

  118 enum_specifier: ENUM IDENTIFIER CURLY_BRACE_OPEN enumerator_list COMMA CURLY_BRACE_CLOSE .

    $default  reduce using rule 118 (enum_specifier)


State 284

  168 designator: SQUARE_BRACE_OPEN constant_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 314


State 285

  169 designator: DOT IDENTIFIER .

    $default  reduce using rule 169 (designator)


State 286

  159 initializer: CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 159 (initializer)


State 287

  160 initializer: CURLY_BRACE_OPEN initializer_list COMMA . CURLY_BRACE_CLOSE
  162 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACE_OPEN  shift, and go to state 221
    CURLY_BRACE_CLOSE  shift, and go to state 315
    DOT                shift, and go to state 222

    $default  reduce using rule 164 (designation_opt)

    designation_opt  go to state 316
    designation      go to state 225
    designator_list  go to state 226
    designator       go to state 227


State 288

  161 initializer_list: designation_opt initializer .

    $default  reduce using rule 161 (initializer_list)


State 289

  165 designation: designator_list ASSIGN_ .

    $default  reduce using rule 165 (designation)


State 290

  167 designator_list: designator_list designator .

    $default  reduce using rule 167 (designator_list)


State 291

  134 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 317


State 292

  136 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt MULTIPLY SQUARE_BRACE_CLOSE .

    $default  reduce using rule 136 (direct_declarator)


State 293

  133 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list_opt assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 133 (direct_declarator)


State 294

  135 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression . SQUARE_BRACE_CLOSE

    SQUARE_BRACE_CLOSE  shift, and go to state 318


State 295

  150 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 150 (parameter_type_list)


State 296

  152 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 152 (parameter_list)


State 297

  156 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 156 (identifier_list)


State 298

  177 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 177 (labeled_statement)


State 299

  191 iteration_statement: DO M statement M . WHILE PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE SEMICOLON

    WHILE  shift, and go to state 319


State 300

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M . expression_statement N M expression N PARENTHESIS_CLOSE M statement

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    expression_statement       go to state 320


State 301

  187 selection_statement: IF PARENTHESIS_OPEN expression N . PARENTHESIS_CLOSE M statement N
  188                    | IF PARENTHESIS_OPEN expression N . PARENTHESIS_CLOSE M statement N ELSE M statement N

    PARENTHESIS_CLOSE  shift, and go to state 321


State 302

   15 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE
   24 unary_expression: SIZEOF PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE .

    CURLY_BRACE_OPEN  shift, and go to state 305

    $default  reduce using rule 24 (unary_expression)


State 303

  189 selection_statement: SWITCH PARENTHESIS_OPEN expression PARENTHESIS_CLOSE . statement

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 322
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 304

   79 expression: expression . COMMA assignment_expression
  190 iteration_statement: WHILE M PARENTHESIS_OPEN expression . N PARENTHESIS_CLOSE M statement

    COMMA  shift, and go to state 214

    $default  reduce using rule 64 (N)

    N  go to state 323


State 305

   15 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN . initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN . initializer_list COMMA CURLY_BRACE_CLOSE

    SQUARE_BRACE_OPEN  shift, and go to state 221
    DOT                shift, and go to state 222

    $default  reduce using rule 164 (designation_opt)

    initializer_list  go to state 324
    designation_opt   go to state 224
    designation       go to state 225
    designator_list   go to state 226
    designator        go to state 227


State 306

   32 cast_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE cast_expression .

    $default  reduce using rule 32 (cast_expression)


State 307

   15 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE . CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE

    CURLY_BRACE_OPEN  shift, and go to state 305


State 308

    8 postfix_expression: postfix_expression SQUARE_BRACE_OPEN expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 8 (postfix_expression)


State 309

   10 postfix_expression: postfix_expression PARENTHESIS_OPEN argument_expression_list PARENTHESIS_CLOSE .

    $default  reduce using rule 10 (postfix_expression)


State 310

   18 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 325


State 311

   56 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   58 logical_and_expression: logical_and_expression LOGICAL_AND M inclusive_or_expression .

    BITWISE_OR  shift, and go to state 209

    $default  reduce using rule 58 (logical_and_expression)


State 312

   58 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   60 logical_or_expression: logical_or_expression LOGICAL_OR M logical_and_expression .

    LOGICAL_AND  shift, and go to state 210

    $default  reduce using rule 60 (logical_or_expression)


State 313

   62 conditional_expression: logical_or_expression N QUESTION_MARK M . expression N COLON M conditional_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 326


State 314

  168 designator: SQUARE_BRACE_OPEN constant_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 168 (designator)


State 315

  160 initializer: CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE .

    $default  reduce using rule 160 (initializer)


State 316

  162 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 134
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 136
    initializer                go to state 327


State 317

  134 direct_declarator: direct_declarator SQUARE_BRACE_OPEN STATIC type_qualifier_list assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 134 (direct_declarator)


State 318

  135 direct_declarator: direct_declarator SQUARE_BRACE_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACE_CLOSE .

    $default  reduce using rule 135 (direct_declarator)


State 319

  191 iteration_statement: DO M statement M WHILE . PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE SEMICOLON

    PARENTHESIS_OPEN  shift, and go to state 328


State 320

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement . N M expression N PARENTHESIS_CLOSE M statement

    $default  reduce using rule 64 (N)

    N  go to state 329


State 321

  187 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE . M statement N
  188                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE . M statement N ELSE M statement N

    $default  reduce using rule 63 (M)

    M  go to state 330


State 322

  189 selection_statement: SWITCH PARENTHESIS_OPEN expression PARENTHESIS_CLOSE statement .

    $default  reduce using rule 189 (selection_statement)


State 323

  190 iteration_statement: WHILE M PARENTHESIS_OPEN expression N . PARENTHESIS_CLOSE M statement

    PARENTHESIS_CLOSE  shift, and go to state 331


State 324

   15 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list . CURLY_BRACE_CLOSE
   16                   | PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list . COMMA CURLY_BRACE_CLOSE
  162 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACE_CLOSE  shift, and go to state 332
    COMMA              shift, and go to state 333


State 325

   18 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 326

   62 conditional_expression: logical_or_expression N QUESTION_MARK M expression . N COLON M conditional_expression
   79 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 214

    $default  reduce using rule 64 (N)

    N  go to state 334


State 327

  162 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 162 (initializer_list)


State 328

  191 iteration_statement: DO M statement M WHILE PARENTHESIS_OPEN . expression N PARENTHESIS_CLOSE SEMICOLON

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 335


State 329

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement N . M expression N PARENTHESIS_CLOSE M statement

    $default  reduce using rule 63 (M)

    M  go to state 336


State 330

  187 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M . statement N
  188                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M . statement N ELSE M statement N

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 337
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 331

  190 iteration_statement: WHILE M PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE . M statement

    $default  reduce using rule 63 (M)

    M  go to state 338


State 332

   15 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list CURLY_BRACE_CLOSE .

    $default  reduce using rule 15 (postfix_expression)


State 333

   16 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA . CURLY_BRACE_CLOSE
  162 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACE_OPEN  shift, and go to state 221
    CURLY_BRACE_CLOSE  shift, and go to state 339
    DOT                shift, and go to state 222

    $default  reduce using rule 164 (designation_opt)

    designation_opt  go to state 316
    designation      go to state 225
    designator_list  go to state 226
    designator       go to state 227


State 334

   62 conditional_expression: logical_or_expression N QUESTION_MARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 340


State 335

   79 expression: expression . COMMA assignment_expression
  191 iteration_statement: DO M statement M WHILE PARENTHESIS_OPEN expression . N PARENTHESIS_CLOSE SEMICOLON

    COMMA  shift, and go to state 214

    $default  reduce using rule 64 (N)

    N  go to state 341


State 336

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement N M . expression N PARENTHESIS_CLOSE M statement

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 342


State 337

  187 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement . N
  188                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement . N ELSE M statement N

    $default  reduce using rule 64 (N)

    N  go to state 343


State 338

  190 iteration_statement: WHILE M PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M . statement

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 344
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 339

   16 postfix_expression: PARENTHESIS_OPEN type_name PARENTHESIS_CLOSE CURLY_BRACE_OPEN initializer_list COMMA CURLY_BRACE_CLOSE .

    $default  reduce using rule 16 (postfix_expression)


State 340

   62 conditional_expression: logical_or_expression N QUESTION_MARK M expression N COLON . M conditional_expression

    $default  reduce using rule 63 (M)

    M  go to state 345


State 341

  191 iteration_statement: DO M statement M WHILE PARENTHESIS_OPEN expression N . PARENTHESIS_CLOSE SEMICOLON

    PARENTHESIS_CLOSE  shift, and go to state 346


State 342

   79 expression: expression . COMMA assignment_expression
  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement N M expression . N PARENTHESIS_CLOSE M statement

    COMMA  shift, and go to state 214

    $default  reduce using rule 64 (N)

    N  go to state 347


State 343

  187 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N .
  188                    | IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N . ELSE M statement N

    ELSE  shift, and go to state 348

    ELSE      [reduce using rule 187 (selection_statement)]
    $default  reduce using rule 187 (selection_statement)


State 344

  190 iteration_statement: WHILE M PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement .

    $default  reduce using rule 190 (iteration_statement)


State 345

   62 conditional_expression: logical_or_expression N QUESTION_MARK M expression N COLON M . conditional_expression

    SIZEOF             shift, and go to state 78
    PARENTHESIS_OPEN   shift, and go to state 81
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    IDENTIFIER         shift, and go to state 135
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 151
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 349


State 346

  191 iteration_statement: DO M statement M WHILE PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 350


State 347

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement N M expression N . PARENTHESIS_CLOSE M statement

    PARENTHESIS_CLOSE  shift, and go to state 351


State 348

  188 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE . M statement N

    $default  reduce using rule 63 (M)

    M  go to state 352


State 349

   62 conditional_expression: logical_or_expression N QUESTION_MARK M expression N COLON M conditional_expression .

    $default  reduce using rule 62 (conditional_expression)


State 350

  191 iteration_statement: DO M statement M WHILE PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE SEMICOLON .

    $default  reduce using rule 191 (iteration_statement)


State 351

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement N M expression N PARENTHESIS_CLOSE . M statement

    $default  reduce using rule 63 (M)

    M  go to state 353


State 352

  188 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M . statement N

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 354
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 353

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement N M expression N PARENTHESIS_CLOSE M . statement

    BREAK              shift, and go to state 69
    CASE               shift, and go to state 70
    CONTINUE           shift, and go to state 71
    DEFAULT            shift, and go to state 72
    DO                 shift, and go to state 73
    FOR                shift, and go to state 74
    GOTO_              shift, and go to state 75
    IF                 shift, and go to state 76
    RETURN_            shift, and go to state 77
    SIZEOF             shift, and go to state 78
    SWITCH             shift, and go to state 79
    WHILE              shift, and go to state 80
    PARENTHESIS_OPEN   shift, and go to state 81
    CURLY_BRACE_OPEN   shift, and go to state 50
    INCREMENT          shift, and go to state 83
    DECREMENT          shift, and go to state 84
    BITWISE_AND        shift, and go to state 85
    MULTIPLY           shift, and go to state 86
    ADD_               shift, and go to state 87
    SUBTRACT           shift, and go to state 88
    BITWISE_NOR        shift, and go to state 89
    NOT                shift, and go to state 90
    SEMICOLON          shift, and go to state 91
    IDENTIFIER         shift, and go to state 92
    INTEGER_CONSTANT   shift, and go to state 93
    FLOATING_CONSTANT  shift, and go to state 94
    CHAR_CONSTANT      shift, and go to state 95
    STRING_LITERAL     shift, and go to state 96

    primary_expression         go to state 97
    postfix_expression         go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    cast_expression            go to state 101
    multiplicative_expression  go to state 102
    additive_expression        go to state 103
    shift_expression           go to state 104
    relational_expression      go to state 105
    equality_expression        go to state 106
    and_expression             go to state 107
    exclusive_or_expression    go to state 108
    inclusive_or_expression    go to state 109
    logical_and_expression     go to state 110
    logical_or_expression      go to state 111
    conditional_expression     go to state 112
    assignment_expression      go to state 113
    expression                 go to state 114
    statement                  go to state 355
    labeled_statement          go to state 117
    compound_statement         go to state 118
    expression_statement       go to state 121
    selection_statement        go to state 122
    iteration_statement        go to state 123
    jump_statement             go to state 124


State 354

  188 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M statement . N

    $default  reduce using rule 64 (N)

    N  go to state 356


State 355

  192 iteration_statement: FOR PARENTHESIS_OPEN expression_statement M expression_statement N M expression N PARENTHESIS_CLOSE M statement .

    $default  reduce using rule 192 (iteration_statement)


State 356

  188 selection_statement: IF PARENTHESIS_OPEN expression N PARENTHESIS_CLOSE M statement N ELSE M statement N .

    $default  reduce using rule 188 (selection_statement)
